<FindBugsFilter>
	<!-- exclude malicious code vulnerability warnings as these are only of type date  -->
     <Match>
       <Bug code="CD,EI,EI2,MS" />
     </Match>

    <!-- Examples for filter definitions (Note: There is no syntactical difference between include and exclude definitions.)
     <Match>
       <Class name="com.foobar.ClassNotToBeAnalyzed" />
     </Match>

     <Match>
       <Class name="com.foobar.ClassWithSomeBugsMatched" />
       <Bug code="DE,UrF,SIC" />
     </Match>

     // Match all XYZ violations.
     <Match>
       <Bug code="XYZ" />
     </Match>

     // Match all doublecheck violations in these methods of "AnotherClass".
     <Match>
       <Class name="com.foobar.AnotherClass" />
       <Or>
         <Method name="nonOverloadedMethod" />
         <Method name="frob" params="int,java.lang.String" returns="void" />
         <Method name="blat" params="" returns="boolean" />
       </Or>
       <Bug code="DC" />
     </Match>

     // A method with a dead local store false positive (medium priority).
     <Match>
       <Class name="com.foobar.MyClass" />
       <Method name="someMethod" />
       <Bug code="DLS_DEAD_LOCAL_STORE" />
       <Priority value="2" />
     </Match>
     -->
</FindBugsFilter>
