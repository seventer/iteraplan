<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
	start-state="start" parent="baseGraphicFlow">
	
	<decision-state id="start">
		<if test="requestParameters['_eventId']=='init'" then="init" />
		<if test="requestParameters['_eventId']=='fromInterchange'" then="fromInterchange" />
		<if test="requestParameters.bbType!=null" then="initFromId" />
		<if test="requestParameters['_eventId']=='loadSavedQuery'" then="pre-load" />
		<if test="requestParameters['_eventId']=='closeAll'" then="closeAll" />
		<if test="requestParameters['_eventId']==null" then="init" />
		<!-- default action if all of the above defined conditions are failing -->
		<if test="true" then="init" />
	</decision-state>
		
	<action-state id="init">
		<evaluate expression="lineGraphicFrontendService.getInitialMemBean()"
			result="flowScope.memBean" />
		<transition on="#{true}" to="firststep" />
	</action-state>

	<action-state id="fromInterchange">
		<evaluate
			expression="lineGraphicFrontendService.fromInterchange(requestParameters['bbType'],requestParameters['idList'])"
			result="flowScope.memBean" />
		<transition on="#{true}" to="secondstep" />
	</action-state>

	<action-state id="pre-load">
		<evaluate expression="lineGraphicFrontendService.getInitialMemBean()"
			result="flowScope.memBean" />
		<transition on="success" to="loadSavedQuery">
			<set name="flowScope.FLOW_LABEL" value="lineGraphicFrontendService.getFlowLabel(null)"
				type="java.lang.String" />
			<set name="memBean.savedQueryId" value="requestParameters.savedQueryId"
				type="java.lang.Integer" />
		</transition>
	</action-state>

	<action-state id="loadSavedQuery">
		<evaluate
			expression="lineGraphicFrontendService.loadSavedQuery(flowScope.memBean)"
			result="flowScope.memBean" />
		<transition on="success" to="secondstep">
			<evaluate
				expression="lineGraphicFrontendService.updateCheckAllBox(flowScope.memBean)" />
		</transition>
	</action-state>

	<view-state id="firststep" model="memBean"
		view="graphicalreporting/linegraphic">
		<on-entry>
			<set name="flowScope.FLOW_LABEL" value="lineGraphicFrontendService.getFlowLabel(null)"
				type="java.lang.String" />
		</on-entry>

		<transition on="expandFirstLevel" to="firststep">
			<evaluate
				expression="lineGraphicFrontendService.expandFirstLevel(flowScope.memBean, flowRequestContext, flowExecutionContext)"
				result="flowScope.memBean" />
		</transition>
		<transition on="expandSecondLevel" to="firststep">
			<evaluate
				expression="lineGraphicFrontendService.expandSecondLevel(flowScope.memBean, flowRequestContext, flowExecutionContext)"
				result="flowScope.memBean" />
		</transition>
		<transition on="shrinkLevel" to="firststep">
			<evaluate
				expression="lineGraphicFrontendService.shrinkLevel(flowScope.memBean, flowRequestContext, flowExecutionContext)"
				result="flowScope.memBean" />
		</transition>

		<transition on="addReportExtension" to="firststep">
			<evaluate
				expression="lineGraphicFrontendService.addReportExtension(flowScope.memBean, flowRequestContext, flowExecutionContext)" />
		</transition>
		<transition on="removeReportExtension" to="firststep">
			<evaluate
				expression="lineGraphicFrontendService.removeReportExtension(flowScope.memBean, flowRequestContext, flowExecutionContext)" />
		</transition>

		<transition on="requestReport" to="firststep">
			<evaluate
				expression="lineGraphicFrontendService.requestEntityList(flowScope.memBean, flowRequestContext, flowExecutionContext)" />
		</transition>

		<transition on="requestAndConfirmReport" to="secondstep">
			<evaluate
				expression="lineGraphicFrontendService.requestEntityList(flowScope.memBean, flowRequestContext, flowExecutionContext)" />
			<evaluate
				expression="lineGraphicFrontendService.stepOneToStepTwo(flowScope.memBean, flowRequestContext, flowExecutionContext)"
				result="flowScope.memBean" />
		</transition>

		<transition on="refreshReport" to="firststep">
			<evaluate result="flowScope.memBean"
				expression="lineGraphicFrontendService.refreshReport(flowScope.memBean, flowRequestContext, flowExecutionContext, true)" />
		</transition>

		<transition on="selectLineType" to="firststep">
			<evaluate
				expression="lineGraphicFrontendService.changeQueryType(flowScope.memBean, flowRequestContext, flowExecutionContext)"
				result="flowScope.memBean" />
		</transition>

		<transition on="loadSavedQuery" to="secondstep">
			<evaluate
				expression="lineGraphicFrontendService.loadSavedQuery(flowScope.memBean)"
				result="flowScope.memBean" />
			<evaluate
				expression="lineGraphicFrontendService.updateCheckAllBox(flowScope.memBean)" />
		</transition>
		<transition on="deleteSavedQuery" to="firststep">
			<evaluate
				expression="lineGraphicFrontendService.deleteSavedQuery(flowScope.memBean)"
				result="flowScope.memBean" />
		</transition>

		<transition on="goToLineExportStep2" to="secondstep">
			<evaluate result="flowScope.memBean"
				expression="lineGraphicFrontendService.stepOneToStepTwo(flowScope.memBean, flowRequestContext, flowExecutionContext)" />
		</transition>

	</view-state>

	<view-state id="secondstep" model="memBean"
		view="graphicalreporting/linegraphic">

		<on-entry>
			<set name="flowScope.FLOW_LABEL" value="lineGraphicFrontendService.getFlowLabel(null)"
				type="java.lang.String" />
		</on-entry>

		<transition on="goToLineExportStep1" to="firststep">
			<evaluate
				expression="lineGraphicFrontendService.stepTwoToStepOne(flowScope.memBean, flowRequestContext, flowExecutionContext)" />
		</transition>

		<transition on="refreshReport" to="secondstep">
			<evaluate result="flowScope.memBean"
				expression="lineGraphicFrontendService.refreshReport(flowScope.memBean, flowRequestContext, flowExecutionContext, false)" />
		</transition>
		<transition on="generateExport" to="secondstep">
			<evaluate
				expression="lineGraphicFrontendService.generateGraphicFileResponse(flowScope.memBean, flowRequestContext, flowExecutionContext)" />
		</transition>
		
		<transition on="triggerDownloadEvent" to="secondstep">
			<evaluate expression="lineGraphicFrontendService.triggerDownloadEvent(flowRequestContext, 'generateExport')" />
		</transition>
		
		<transition on="saveQuery" to="secondstep">
			<evaluate expression="lineGraphicFrontendService.saveQuery(flowScope.memBean, flowRequestContext)" />
		</transition>
		<transition on="saveQueryAs" to="secondstep">
			<evaluate expression="lineGraphicFrontendService.saveQueryAs(flowScope.memBean, flowRequestContext)" />
		</transition>
		<transition on="loadSavedQuery" to="pre-load" />
	</view-state>

	<end-state id="close"
		view="externalRedirect:contextRelative:/show/graphicalreporting/linediagram" />

	<end-state id="closeAll"
		view="externalRedirect:contextRelative:/graphicalreporting/init.do">
		<on-entry>
			<evaluate
				expression="lineGraphicFrontendService.closeAllFlows(flowRequestContext)"></evaluate>
		</on-entry>
	</end-state>
</flow>