<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/webflow 
	    http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd "
	start-state="start" parent="baseFlow">

	<input name="id" type="java.lang.Integer" />

	<decision-state id="start">
		<on-entry>
			<set name="flowScope.entityName" value="dateIntervalFrontendService.getEntityName()"
				type="java.lang.String" />
		</on-entry>
		<if test="requestParameters['_eventId']=='show'" then="show" />
		<if test="requestParameters['_eventId']=='edit'" then="pre-edit" />
		<if test="requestParameters['_eventId']=='delete'" then="pre-delete" />
		<if test="requestParameters['_eventId']=='create'" then="initCreate" />
		<if test="requestParameters['_eventId']=='closeAll'" then="closeAll" />
		<if test="requestParameters['_eventId']=='copyBB'" then="copyBB" />
		<if test="requestParameters['_eventId']==null" then="show" />
	</decision-state>

	<view-state id="show" model="memBean" view="dateinterval/show">

		<on-entry>
			<evaluate expression="dateIntervalFrontendService.getMemBean(id)" result="flowScope.memBean" />
			<set name="flowScope.FLOW_LABEL" type="java.lang.String"
				value="dateIntervalFrontendService.getFlowLabel(flowScope.memBean.componentModel.nameModel.name)" />
		</on-entry>
		
		<transition on="edit" to="edit">
			<evaluate expression="dateIntervalFrontendService.getEditMemBean(flowScope.memBean, id, flowRequestContext, flowExecutionContext)"
				result="flowScope.memBean" />
			<set name="flowScope.setFocusOnTextfield" value="true" type="java.lang.String" />
		</transition>
		
		<transition on="delete" to="confirmed">
			<evaluate expression="dateIntervalFrontendService.deleteEntity(id, flowRequestContext, flowExecutionContext)" />
		</transition>

	</view-state>
	
	<view-state id="edit" model="memBean" view="dateinterval/edit">
		<transition on="save" to="show" history="invalidate">
			<evaluate expression="dateIntervalFrontendService.saveComponentModel(flowScope.memBean, id, flowRequestContext, flowExecutionContext)" />
		</transition>
		<transition on="update" to="edit">
			<set name="flowScope.setFocusOnTextfield" value="false" type="java.lang.String" />
			<evaluate expression="dateIntervalFrontendService.updateComponentModel(flowScope.memBean, flowRequestContext, flowExecutionContext)" />
		</transition>
		<transition on="cancel" to="show" validate="false">
			<evaluate expression="dateIntervalFrontendService.leaveEditMode(flowExecutionContext)" />
		</transition>
	</view-state>

	<view-state id="initCreate" model="memBean" view="dateinterval/create">
		<on-entry>
			<set name="flowScope.setFocusOnTextfield" value="true"
				type="java.lang.String" />
			<evaluate expression="dateIntervalFrontendService.getCreateMemBean(flowExecutionContext)"
				result="flowScope.memBean" />
			<set name="flowScope.FLOW_LABEL" type="java.lang.String"
				value="dateIntervalFrontendService.getFlowLabel(null)" />
			<set name="flowScope.setFocusOnTextfield" value="true" type="java.lang.String" />
		</on-entry>
		<on-render>
			<evaluate expression="dateIntervalFrontendService.enterEditMode(flowExecutionContext)" />
		</on-render>
		<transition on="save" to="refreshAfterSave" history="invalidate">
			<evaluate
				expression="dateIntervalFrontendService.saveNewComponentModel(flowScope.memBean, flowRequestContext, flowExecutionContext)"
				result="flowScope.id" />
		</transition>

		<transition on="cancel" to="close" validate="false" />
	</view-state>

<!-- 	<view-state id="create" model="memBean" view="dateinterval/create"> -->

<!-- 	</view-state> -->
	
	<action-state id="pre-edit">
	  	 <on-entry>
	  	 	<evaluate expression="dateIntervalFrontendService.getMemBean(id)" result="flowScope.memBean" />
			<set name="flowScope.FLOW_LABEL" type="java.lang.String"
				value="dateIntervalFrontendService.getFlowLabel(flowScope.memBean.componentModel.nameModel.name)" />
	     </on-entry>
	     <evaluate expression="dateIntervalFrontendService.getEditMemBean(flowScope.memBean, id, flowRequestContext, flowExecutionContext)"
					result="flowScope.memBean" />
	     <transition on="success" to="edit">
	     	<set name="flowScope.setFocusOnTextfield" value="true" type="java.lang.String" />
	     </transition>
  	</action-state>
  	
  	<action-state id="pre-delete">
	  	 <evaluate expression="dateIntervalFrontendService.getMemBean(id)" result="flowScope.memBean" />
	     <set name="flowScope.FLOW_LABEL" type="java.lang.String"
					value="dateIntervalFrontendService.getFlowLabel(flowScope.memBean.componentModel.nameModel.name)" />
	  	 <transition on="success" to="delete" />
  	</action-state>
  	
  	<action-state id="delete">
	  	 <evaluate expression="dateIntervalFrontendService.deleteEntity(id, flowRequestContext, flowExecutionContext)" />
		 <transition on="yes" to="confirmed" />
		 <transition on="no" to="onError" />
  	</action-state>
	
	<end-state id="close" view="externalRedirect:contextRelative:/dateinterval/init.do" />
	<end-state id="confirmed" commit="true"	view="externalRedirect:contextRelative:/dateinterval/init.do" />
	<end-state id="closeAll" view="externalRedirect:contextRelative:/dateinterval/init.do">
		<on-entry>
			<evaluate expression="dateIntervalFrontendService.closeAllFlows(flowRequestContext)"></evaluate>
		</on-entry>
	</end-state>
</flow>