<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/webflow 
	    http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd "
	start-state="start" parent="baseFlow">

	<input name="id" type="java.lang.Integer" />

	<decision-state id="start">
		<on-entry>
			<set name="flowScope.entityName"
				value="attributeTypeFrontendService.getEntityName()" type="java.lang.String" />
		</on-entry>
		<if test="requestParameters['_eventId']=='show'" then="show" />
		<if test="requestParameters['_eventId']=='delete'" then="delete" />
		<if test="requestParameters['_eventId']=='create'" then="chooseTypeForCreate" />
		<if test="requestParameters['_eventId']=='closeAll'" then="closeAll" />
		<if test="requestParameters['_eventId']=='copyBB'" then="copyBB" />
		<if test="requestParameters['_eventId']==null" then="show" />
	</decision-state>

	<view-state id="show" model="memBean" view="attributetype/show">
		<on-entry>
			<evaluate expression="attributeTypeFrontendService.getMemBean(id)"
				result="flowScope.memBean" />
			<set name="flowScope.FLOW_LABEL" type="java.lang.String"
				value="attributeTypeFrontendService.getFlowLabel(flowScope.memBean.componentModel.nameModel.name)" />
		</on-entry>
		
		<transition on="edit" to="edit">
			<evaluate expression="attributeTypeFrontendService.getEditMemBean(flowScope.memBean, id, flowRequestContext, flowExecutionContext)"
				result="flowScope.memBean" />
			<set name="flowScope.setFocusOnTextfield" value="true" type="java.lang.String" />
		</transition>
		<transition on="delete" to="confirmed">
			<evaluate expression="attributeTypeFrontendService.deleteEntity(id, flowRequestContext, flowExecutionContext)" />
		</transition>
		<!-- Shouldn't occur and is probably unused. But just to be sure it doesn't break -->
		<transition on="cancel" to="show"/>
	</view-state>

	<view-state id="edit" model="memBean" view="attributetype/edit">
		<transition on="save" to="show" history="invalidate">
			<evaluate expression="attributeTypeFrontendService.saveComponentModel(flowScope.memBean, id, flowRequestContext, flowExecutionContext)" />
		</transition>
		<transition on="update" to="edit">
			<set name="flowScope.setFocusOnTextfield" value="false" type="java.lang.String" />
			<evaluate expression="attributeTypeFrontendService.updateComponentModel(flowScope.memBean, flowRequestContext, flowExecutionContext)" />
		</transition>
		<transition on="cancel" to="show" validate="false">
			<evaluate expression="attributeTypeFrontendService.leaveEditMode(flowExecutionContext)" />
		</transition>
	</view-state>
	
	<view-state id="chooseTypeForCreate" model="memBean" view="attributetype/choosetypeofnew">
		<on-entry>
			<evaluate expression="attributeTypeFrontendService.getChooseMemBean(flowRequestContext, flowExecutionContext)"
				result="flowScope.memBean" />
			<set name="flowScope.FLOW_LABEL" type="java.lang.String"
				value="attributeTypeFrontendService.getFlowLabel(null)" />
		</on-entry>
		
		<transition on="create" to="initCreate"/>
		<transition on="cancel" to="close" validate="false" />
	</view-state>
	
	<view-state id="initCreate" model="memBean" view="attributetype/create">
		<on-entry>
			<evaluate expression="attributeTypeFrontendService.getCreateMemBean(flowScope.memBean, flowRequestContext, flowExecutionContext)"
				result="flowScope.memBean" />
			<set name="flowScope.FLOW_LABEL" type="java.lang.String"
				value="attributeTypeFrontendService.getFlowLabel(null)" />	
			<set name="flowScope.setFocusOnTextfield" value="true" type="java.lang.String" />
		</on-entry>
		
		<transition on="save" to="refreshAfterSave" history="invalidate" >
			<evaluate expression="attributeTypeFrontendService.saveNewComponentModel(flowScope.memBean, flowRequestContext, flowExecutionContext)" 
				result="flowScope.id"/>
		</transition>
		<transition on="update" to="create">
			<set name="flowScope.setFocusOnTextfield" value="false" type="java.lang.String" />
			<evaluate expression="attributeTypeFrontendService.updateComponentModel(flowScope.memBean, flowRequestContext, flowExecutionContext)" />
		</transition>
		<!-- going to 'show' doesn't appear really meaningful in this case, so close the flow -->
		<transition on="cancel" to="close" validate="false" />
	</view-state>
	
	<view-state id="create" model="memBean" view="attributetype/create">
		<on-entry>
			<set name="flowScope.FLOW_LABEL" type="java.lang.String"
				value="attributeTypeFrontendService.getFlowLabel(flowScope.memBean.componentModel.nameModel.name)" />
		</on-entry>
		<transition on="save" to="refreshAfterSave" history="invalidate" >
			<evaluate expression="attributeTypeFrontendService.saveNewComponentModel(flowScope.memBean, flowRequestContext, flowExecutionContext)" 
				result="flowScope.id"/>
		</transition>
		<transition on="update" to="create">
			<evaluate expression="attributeTypeFrontendService.updateComponentModel(flowScope.memBean, flowRequestContext, flowExecutionContext)" />
		</transition>
		<!-- going to 'show' doesn't appear really meaningful in this case, so close the flow -->
		<transition on="cancel" to="close" validate="false"/>
	</view-state>
	
    <view-state id="copyBB" model="memBean" view="attributetype/copy">
		<on-entry>
			<evaluate expression="attributeTypeFrontendService.getCopyMemBean(id, flowRequestContext, flowExecutionContext)"
				result="flowScope.memBean" />
			<set name="flowScope.FLOW_LABEL" type="java.lang.String"
				value="attributeTypeFrontendService.getFlowLabel(null)" />	
			<set name="flowScope.setFocusOnTextfield" value="true" type="java.lang.String" />
		</on-entry>
		<on-render>
			<evaluate
				expression="attributeTypeFrontendService.enterEditMode(flowExecutionContext)" />
		</on-render>
		<transition on="save" to="refreshAfterSave" history="invalidate">
			<evaluate expression="attributeTypeFrontendService.saveNewComponentModel(flowScope.memBean, flowRequestContext, flowExecutionContext)" 
				result="flowScope.id"/>
			<set name="flowScope.FLOW_LABEL" type="java.lang.String"
				value="attributeTypeFrontendService.getFlowLabel(flowScope.memBean.componentModel.nameModel.name)" />
		</transition>
		<transition on="update" to="create">
			<evaluate expression="attributeTypeFrontendService.updateComponentModel(flowScope.memBean, flowRequestContext, flowExecutionContext)" />
			<set name="flowScope.setFocusOnTextfield" value="false" type="java.lang.String" />
		</transition>
		<!-- going to 'show' doesn't appear really meaningful in this case, so close the flow -->
		<transition on="cancel" to="close" validate="false"/>
	</view-state>

	<end-state id="close"
		view="externalRedirect:contextRelative:/attributetype/init.do" />
	<end-state id="confirmed" commit="true"
		view="externalRedirect:contextRelative:/attributetype/init.do" />
	<end-state id="closeAll" view="externalRedirect:contextRelative:/attributetype/init.do">
		<on-entry>
			<evaluate expression="attributeTypeFrontendService.closeAllFlows(flowRequestContext)"></evaluate>
		</on-entry>
	</end-state>
</flow>
